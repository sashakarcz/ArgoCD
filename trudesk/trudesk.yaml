---
apiVersion: v1
kind: Namespace
metadata:
  name: trudesk

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-data
  namespace: trudesk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: longhorn

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: trudesk-uploads
  namespace: trudesk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: trudesk-backups
  namespace: trudesk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: trudesk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:5.0-focal
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-data

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: trudesk
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trudesk
  namespace: trudesk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trudesk
  template:
    metadata:
      labels:
        app: trudesk
    spec:
      initContainers:
      - name: wait-for-mongodb
        image: mongo:5.0-focal
        command:
        - sh
        - -c
        - |
          until mongosh --host mongo --eval "db.adminCommand('ping')"; do
            echo "Waiting for MongoDB..."
            sleep 5
          done
      containers:
      - name: trudesk
        image: polonel/trudesk:latest
        ports:
        - containerPort: 8118
        env:
        - name: NODE_ENV
          value: production
        - name: TRUDESK_DOCKER
          value: "true"
        - name: TD_MONGODB_SERVER
          value: mongo
        - name: TD_MONGODB_DATABASE
          value: trudesk
        - name: USE_XFORWARDIP
          value: "true"
        volumeMounts:
        - name: trudesk-uploads
          mountPath: /usr/src/trudesk/public/uploads
        - name: trudesk-backups
          mountPath: /usr/src/trudesk/backups
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /
            port: 8118
          initialDelaySeconds: 120
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8118
          initialDelaySeconds: 60
          periodSeconds: 10
      volumes:
      - name: trudesk-uploads
        persistentVolumeClaim:
          claimName: trudesk-uploads
      - name: trudesk-backups
        persistentVolumeClaim:
          claimName: trudesk-backups

---
apiVersion: v1
kind: Service
metadata:
  name: trudesk
  namespace: trudesk
spec:
  selector:
    app: trudesk
  ports:
  - port: 80
    targetPort: 8118

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trudesk-ingress
  namespace: trudesk
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - trudesk.starnix.net
    secretName: trudesk-tls
  rules:
  - host: trudesk.starnix.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: trudesk
            port:
              number: 80
