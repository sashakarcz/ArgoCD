---
# 1. Namespace
# A dedicated namespace for Home Assistant resources.
apiVersion: v1
kind: Namespace
metadata:
  name: homeassistant
  labels:
    name: homeassistant

---
# 2. PersistentVolume (NFS)
# Defines the NFS volume that holds the application's storage.
apiVersion: v1
kind: PersistentVolume
metadata:
  name: homeassistant-config-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: "192.168.1.75"
    path: "/mnt/Store/nomad/homeassistant/config"

---
# 3. PersistentVolumeClaim
# A claim for the NFS volume, which the Home Assistant pod will use.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: homeassistant-config-pvc
  namespace: homeassistant
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  volumeName: homeassistant-config-pv
  storageClassName: ""

---
# 4. Deployment
# Manages the Home Assistant application pod.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homeassistant
  namespace: homeassistant
  labels:
    app: homeassistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homeassistant
  template:
    metadata:
      labels:
        app: homeassistant
    spec:
      containers:
      - name: homeassistant
        image: lscr.io/linuxserver/homeassistant:latest
        ports:
        - containerPort: 8123
          name: http
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "America/Chicago"
        resources:
          requests:
            cpu: 200m
            memory: 4Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        volumeMounts:
        - name: config-volume
          mountPath: /config
      volumes:
      - name: config-volume
        persistentVolumeClaim:
          claimName: homeassistant-config-pvc # <-- CORRECTED CLAIM NAME

---
# 5. Service
# Exposes the Home Assistant deployment internally to the cluster.
apiVersion: v1
kind: Service
metadata:
  name: homeassistant-service
  namespace: homeassistant
  labels:
    app: homeassistant
spec:
  selector:
    app: homeassistant
  ports:
    - protocol: TCP
      port: 8123
      targetPort: 8123
  type: ClusterIP

---
# 6. Ingress with NGINX and Cert-Manager
# Configures external access and automates SSL with cert-manager.
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homeassistant-ingress
  namespace: homeassistant
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - ha.service.starnix.net
    secretName: homeassistant-tls-cert
  rules:
  - host: ha.service.starnix.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: homeassistant-service
            port:
              number: 8123
