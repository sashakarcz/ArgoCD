---
apiVersion: v1
kind: Namespace
metadata:
  name: weather
  labels:
    app: weather

---
# PersistentVolume for weather-music NFS share
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weather-music-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  volumeMode: Filesystem
  nfs:
    server: 192.168.1.75
    path: /mnt/Store/nomad/ws4kp/lofi
  mountOptions:
    - timeo=30
    - intr
    - vers=3
    - _netdev
    - nolock

---
# PersistentVolumeClaim for weather-music
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: weather-music-pvc
  namespace: weather
  labels:
    app: weather
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: manual
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather
  namespace: weather
  labels:
    app: weather
spec:
  replicas: 3
  selector:
    matchLabels:
      app: weather
  template:
    metadata:
      labels:
        app: weather
    spec:
      containers:
      - name: weather-service
        image: ghcr.io/netbymatt/ws4kp:5.24.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        volumeMounts:
        - name: weather-music
          mountPath: /app/server/music
          readOnly: true
        resources:
          requests:
            memory: "2560Mi"
            cpu: "600m"
          limits:
            memory: "3Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
      volumes:
      - name: weather-music
        persistentVolumeClaim:
          claimName: weather-music-pvc
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: weather-service
  namespace: weather
  labels:
    app: weather
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: weather

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: weather-ingress
  namespace: weather
  labels:
    app: weather
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - weather.starnix.net
    secretName: weather-tls
  rules:
  - host: weather.starnix.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: weather-service
            port:
              number: 8080
