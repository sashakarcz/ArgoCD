---
apiVersion: v1
kind: Namespace
metadata:
  name: nocodb

---
# Secret should be created separately using create-nocodb-secrets.sh
# kubectl create secret generic nocodb-secrets --namespace=nocodb \
#   --from-literal=mysql-root-password="your-password" \
#   --from-literal=mysql-password="your-password" \
#   --from-literal=jwt-secret="your-jwt-secret"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nocodb-config
  namespace: nocodb
data:
  MYSQL_DATABASE: "nocodb"
  MYSQL_USER: "nocodb"
  NC_PUBLIC_URL: "https://nocodb.starnix.net"  # Update with your domain

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nocodb-mariadb-data
  namespace: nocodb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: longhorn

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nocodb-app-data
  namespace: nocodb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nocodb-mariadb
  namespace: nocodb
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: nocodb-mariadb
  template:
    metadata:
      labels:
        app: nocodb-mariadb
    spec:
      containers:
      - name: mariadb
        image: mariadb:10.11-jammy
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nocodb-secrets
              key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: nocodb-config
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: nocodb-config
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nocodb-secrets
              key: mysql-password
        volumeMounts:
        - name: mariadb-data
          mountPath: /var/lib/mysql
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: mariadb-data
        persistentVolumeClaim:
          claimName: nocodb-mariadb-data

---
apiVersion: v1
kind: Service
metadata:
  name: nocodb-mariadb
  namespace: nocodb
spec:
  selector:
    app: nocodb-mariadb
  ports:
  - port: 3306

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nocodb
  namespace: nocodb
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: nocodb
  template:
    metadata:
      labels:
        app: nocodb
    spec:
      initContainers:
      - name: wait-for-mariadb
        image: mariadb:10.11-jammy
        command:
        - sh
        - -c
        - |
          echo "Waiting for MariaDB to be ready..."
          until mysqladmin ping -h nocodb-mariadb -u $MYSQL_USER -p$MYSQL_PASSWORD --silent; do
            echo "MariaDB not ready, retrying in 5 seconds..."
            sleep 5
          done
          echo "MariaDB is ready!"
        env:
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: nocodb-config
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nocodb-secrets
              key: mysql-password
      containers:
      - name: nocodb
        image: nocodb/nocodb:latest
        ports:
        - containerPort: 8080
        env:
        - name: NC_DB_HOST
          value: "nocodb-mariadb"
        - name: NC_DB_PORT
          value: "3306"
        - name: NC_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: nocodb-config
              key: MYSQL_USER
        - name: NC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nocodb-secrets
              key: mysql-password
        - name: NC_DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: nocodb-config
              key: MYSQL_DATABASE
        - name: NC_AUTH_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: nocodb-secrets
              key: jwt-secret
        - name: NC_PUBLIC_URL
          valueFrom:
            configMapKeyRef:
              name: nocodb-config
              key: NC_PUBLIC_URL
        - name: NC_DISABLE_TELE
          value: "true"
        volumeMounts:
        - name: nocodb-data
          mountPath: /usr/app/data
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: nocodb-data
        persistentVolumeClaim:
          claimName: nocodb-app-data

---
apiVersion: v1
kind: Service
metadata:
  name: nocodb
  namespace: nocodb
spec:
  selector:
    app: nocodb
  ports:
  - port: 8080
    targetPort: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nocodb-ingress
  namespace: nocodb
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - nocodb.starnix.net  # Update with your domain
    secretName: nocodb-tls
  rules:
  - host: nocodb.starnix.net  # Update with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nocodb
            port:
              number: 8080
