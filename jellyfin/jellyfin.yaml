---
# 1. Namespace
# A dedicated namespace for Jellyfin resources.
apiVersion: v1
kind: Namespace
metadata:
  name: jellyfin
  labels:
    name: jellyfin

---
# 2. PersistentVolumes (NFS)
# Defines all the NFS volumes for Jellyfin's configuration and media libraries.
# --------------------------------------------------------------------------

# Config Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-config-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: "192.168.1.75"
    path: "/mnt/Store/nomad/jellyfin/config"

---
# Series Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-series-pv
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: "192.168.1.86"
    path: "/media/completed/Series"

---
# Movies Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-movies-pv
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: "192.168.1.86"
    path: "/media/completed/Movies"

---
# Old TV Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-old-tv-pv
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: "192.168.1.75"
    path: "/mnt/Store/Videos/torrents/TV"

---
# Old Movies Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-old-movies-pv
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: "192.168.1.75"
    path: "/mnt/Store/Videos/torrents/Movies"

---
# Music Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-music-pv
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: "192.168.1.75"
    path: "/mnt/Store/Music"

---
# New Music Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-new-music-pv
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: "192.168.1.86"
    path: "/media/completed/Music"

---
# 3. PersistentVolumeClaims
# Claims for each of the NFS volumes.
# --------------------------------------------------------------------------

# Config Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config-pvc
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  volumeName: jellyfin-config-pv
  storageClassName: ""

---
# Series Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-series-pvc
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  volumeName: jellyfin-series-pv
  storageClassName: ""

---
# Movies Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-movies-pvc
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  volumeName: jellyfin-movies-pv
  storageClassName: ""

---
# Old TV Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-old-tv-pvc
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  volumeName: jellyfin-old-tv-pv
  storageClassName: ""

---
# Old Movies Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-old-movies-pvc
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  volumeName: jellyfin-old-movies-pv
  storageClassName: ""

---
# Music Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-music-pvc
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  volumeName: jellyfin-music-pv
  storageClassName: ""

---
# New Music Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-new-music-pvc
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  volumeName: jellyfin-new-music-pv
  storageClassName: ""

---
# 4. Deployment
# Manages the Jellyfin application pod.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      # Removed the nodeSelector. Pod can now be scheduled on any node with a GPU.
      securityContext:
        fsGroup: 105
        supplementalGroups: [44, 105]
        privileged: true
      containers:
      - name: jellyfin
        image: jellyfin/jellyfin
        ports:
        - containerPort: 8096
          name: http
        env:
        - name: JELLYFIN_DATA_DIR
          value: "/config/data"
        - name: JELLYFIN_TEMP_DIR
          value: "/transcode"
        - name: LIBVA_DRIVER_NAME
          value: "iHD"
        resources:
          limits:
            gpu.intel.com/i915: 1 # Intel GPU resource request is the primary scheduling constraint
            cpu: 12000m
            memory: 12Gi
          requests:
            cpu: 200m
            memory: 4Gi
        volumeMounts:
        - name: scratch-volume
          mountPath: "/transcode"
        - name: config-volume
          mountPath: "/config"
        - name: series-volume
          mountPath: "/tv"
        - name: movies-volume
          mountPath: "/movies"
        - name: old-tv-volume
          mountPath: "/old/tv"
        - name: old-movies-volume
          mountPath: "/old/movies"
        - name: music-volume
          mountPath: "/Music"
        - name: new-music-volume
          mountPath: "/new/Music"
        - name: dev-dri
          mountPath: /dev/dri
      volumes:
      - name: scratch-volume
        emptyDir:
          medium: Memory
          sizeLimit: 20Gi
      - name: config-volume
        persistentVolumeClaim:
          claimName: jellyfin-config-pvc
      - name: series-volume
        persistentVolumeClaim:
          claimName: jellyfin-series-pvc
      - name: movies-volume
        persistentVolumeClaim:
          claimName: jellyfin-movies-pvc
      - name: old-tv-volume
        persistentVolumeClaim:
          claimName: jellyfin-old-tv-pvc
      - name: old-movies-volume
        persistentVolumeClaim:
          claimName: jellyfin-old-movies-pvc
      - name: music-volume
        persistentVolumeClaim:
          claimName: jellyfin-music-pvc
      - name: new-music-volume
        persistentVolumeClaim:
          claimName: jellyfin-new-music-pvc
      - name: dev-dri
        hostPath:
          path: /dev/dri
          type: Directory

---
# 5. Service (MetalLB LoadBalancer)
# This service exposes Jellyfin directly via MetalLB on a static IP.
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
  namespace: jellyfin
  labels:
    app: jellyfin
  annotations:
    metallb.universe.tf/loadBalancerIPs: "192.168.1.202"
spec:
  selector:
    app: jellyfin
  ports:
    - protocol: TCP
      port: 8096
      targetPort: 8096
  type: LoadBalancer
  loadBalancerIP: 192.168.1.202
